package method;/** * <p> * 输入一个链表，反转链表后，输出新链表的表头。 * </p> * * @author lipeilong * @time 2020/9/7 19:19 * @description 输入一个链表，反转链表后，输出新链表的表头。 */public class 反转链表 {    public ListNode ReverseList(ListNode head) {        if (head == null) {            return null;        }        if (head.next == null) {            return head;        }        ListNode last = null, next = null, temp = head;        while (temp.next != null) {            next = temp.next;            temp.next = last;            last = temp;            temp = next;        }        temp.next = last;        return temp;    }    public class ListNode {        int val;        ListNode next = null;        ListNode(int val) {            this.val = val;        }    }}