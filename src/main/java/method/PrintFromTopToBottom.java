package method;import java.util.ArrayList;import java.util.LinkedList;import java.util.Queue;public class PrintFromTopToBottom {    public static void main(String[] args) {        TreeNode treeNode = new TreeNode(1);        treeNode.left = new TreeNode(2);        treeNode.right = new TreeNode(3);        treeNode.left.left = new TreeNode(2);        ArrayList<Integer> res =  PrintFromTopToBottom(treeNode);        System.out.println(res);    }    public static ArrayList<Integer> PrintFromTopToBottom(TreeNode root) {        ArrayList<Integer> result = new ArrayList<>();        if (root==null){            return result;        }        Queue<TreeNode> queue = new LinkedList<>();        queue.add(root);        while (!queue.isEmpty()){            TreeNode node = queue.poll();            result.add(node.val);            if (node.left!=null){                queue.add(node.left);            }            if (node.right!=null){                queue.add(node.right);            }        }        return result;    }    public static class TreeNode {        int val = 0;        TreeNode left = null;        TreeNode right = null;        public TreeNode(int val) {            this.val = val;        }    }}